Literal intlit
Literal longlit
Literal true
Literal false
Literal null
Literal strlit
Literal floatlit
Literal doublelit
Literal charlit

Type PrimitiveType 
Type ReferenceType
PrimitiveType Annotations NumericType 
PrimitiveType Annotations boolean
Annotations Annotation Annotations
Annotations
NumericType IntegralType
NumericType FloatingPointType
IntegralType byte
IntegralType short
IntegralType int
IntegralType long
IntegralType char
FloatingPointType float
FloatingPointType double
ReferenceType ClassOrInterfaceType
ReferenceType TypeVariable
ReferenceType ArrayType
ClassOrInterfaceType Annotations identifier OptionalTypeArguments
ClassOrInterfaceType ClassOrInterfaceType . Annotations identifier OptionalTypeArguments
OptionalTypeArguments TypeArguments
OptionalTypeArguments
TypeVariable Annotations identifier
ArrayType PrimitiveType Dims
ArrayType ClassOrInterfaceType Dims 
ArrayType TypeVariable Dims
Dims Annotations [ ]
Dims Annotations [ ] Dims
TypeParameter TypeParameterModifiers identifier OptionalTypeBound
TypeParameterModifiers TypeParameterModifier TypeParameterModifiers
TypeParameterModifiers
TypeParameterModifier Annotation
OptionalTypeBound TypeBound
OptionalTypeBound
TypeBound extends TypeVariable 
TypeBound extends ClassOrInterfaceType AdditionalBounds
AdditionalBounds AdditionalBound AdditionalBounds
AdditionalBounds
AdditionalBound & ClassOrInterfaceType
TypeArguments < TypeArgumentList >
TypeArgumentList TypeArgument
TypeArgumentList TypeArgument , TypeArgumentList
TypeArgument ReferenceType 
TypeArgument Wildcard
Wildcard Annotations ? OptionalWildcardBounds
OptionalWildcardBounds WildcardBounds
OptionalWildcardBounds
WildcardBounds extends ReferenceType 
WildcardBounds super ReferenceType

TypeName identifier 
TypeName PackageOrTypeName . identifier
PackageOrTypeName identifier 
PackageOrTypeName PackageOrTypeName . identifier
ExpressionName identifier 
ExpressionName AmbiguousName . identifier
MethodName identifier 
PackageName identifier 
PackageName PackageName . identifier
AmbiguousName identifier 
AmbiguousName AmbiguousName . identifier

CompilationUnit OptionalPackageDeclaration ImportDeclarations TypeDeclarations eof
OptionalPackageDeclaration PackageDeclaration
OptionalPackageDeclaration
ImportDeclarations ImportDeclaration ImportDeclarations
ImportDeclarations
TypeDeclarations TypeDeclaration TypeDeclarations
TypeDeclarations
PackageDeclaration PackageModifiers package identifier DottedIdentifiers ;
DottedIdentifiers . identifier
DottedIdentifiers
PackageModifiers PackageModifier PackageModifiers
PackageModifiers
PackageModifier Annotation
ImportDeclaration SingleTypeImportDeclaration 
ImportDeclaration TypeImportOnDemandDeclaration 
ImportDeclaration SingleStaticImportDeclaration 
ImportDeclaration StaticImportOnDemandDeclaration
SingleTypeImportDeclaration import TypeName ;
TypeImportOnDemandDeclaration import PackageOrTypeName . * ;
SingleStaticImportDeclaration import static TypeName . identifier ;
StaticImportOnDemandDeclaration import static TypeName . * ;
TypeDeclaration ClassDeclaration 
TypeDeclaration InterfaceDeclaration 
TypeDeclaration ;

ClassDeclaration NormalClassDeclaration 
ClassDeclaration EnumDeclaration
NormalClassDeclaration ClassModifiers class identifier OptionalTypeParameters OptionalSuperclass OptionalSuperinterfaces ClassBody
ClassModifiers ClassModifier ClassModifiers
ClassModifiers
ClassModifier Annotation
ClassModifier public
ClassModifier protected
ClassModifier private 
ClassModifier abstract
ClassModifier static
ClassModifier final
ClassModifier strictfp
OptionalTypeParameters TypeParameters
OptionalTypeParameters
TypeParameters < TypeParameterList >
TypeParameterList TypeParameter , TypeParemeterList
TypeParameterList TypeParameter
OptionalSuperclass Superclass
OptionalSuperclass
Superclass extends ClassOrInterfaceType
OptionalSuperinterfaces Superinterfaces
OptionalSuperinterfaces
Superinterfaces implements InterfaceTypeList
InterfaceTypeList ClassOrInterfaceType , InterfaceTypeList
InterfaceTypeList ClassOrInterfaceType
ClassBody { ClassBodyDeclarations }
ClassBodyDeclarations ClassBodyDeclaration ClassBodyDeclarations
ClassBodyDeclarations
ClassBodyDeclaration ClassMemberDeclaration 
ClassBodyDeclaration InstanceInitializer 
ClassBodyDeclaration StaticInitializer 
ClassBodyDeclaration ConstructorDeclaration
ClassMemberDeclaration FieldDeclaration 
ClassMemberDeclaration MethodDeclaration 
ClassMemberDeclaration ClassDeclaration 
ClassMemberDeclaration InterfaceDeclaration 
ClassMemberDeclaration ;
FieldDeclaration FieldModifiers UnannType VariableDeclaratorList ;
FieldModifiers FieldModifier FieldModifiers
FieldModifiers
FieldModifier Annotation
FieldModifier public
FieldModifier protected
FieldModifier private
FieldModifier static
FieldModifier final
FieldModifier transient
FieldModifier volatile
VariableDeclaratorList VariableDeclarator , VariableDeclaratorList
VariableDeclaratorList VariableDeclarator
VariableDeclarator VariableDeclaratorId
VariableDeclarator VariableDeclaratorId = VariableInitializer
VariableDeclaratorId identifier OptionalDims
OptionalDims Dims
OptionalDims
VariableInitializer Expression 
VariableInitializer ArrayInitializer
UnannType UnannPrimitiveType 
UnannType UnannReferenceType
UnannPrimitiveType NumericType 
UnannPrimitiveType boolean
UnannReferenceType UnannClassOrInterfaceType 
UnannReferenceType UnannTypeVariable 
UnannReferenceType UnannArrayType
UnannClassOrInterfaceType identifier OptionalTypeArguments 
UnannClassOrInterfaceType UnannClassOrInterfaceType . Annotations identifier OptionalTypeArguments
UnannTypeVariable identifier
UnannArrayType UnannPrimitiveType Dims 
UnannArrayType UnannClassOrInterfaceType Dims 
UnannArrayType UnannTypeVariable Dims
MethodDeclaration MethodModifiers MethodHeader MethodBody
MethodModifiers MethodModifier MethodModifiers
MethodModifiers
MethodModifier Annotation
MethodModifier public
MethodModifier protected
MethodModifier private
MethodModifier abstract
MethodModifier static
MethodModifier final
MethodModifier synchronized
MethodModifier native
MethodModifier strictfp
MethodHeader Result MethodDeclarator OptionalThrows 
MethodHeader TypeParameters Annotations Result MethodDeclarator OptionalThrows
OptionalThrows Throws
OptionalThrows
Result UnannType 
Result void
MethodDeclarator identifier ( OptionalFormalParameterList ) OptionalDims
OptionalFormalParameterList FormalParameterList
OptionalFormalParameterList
FormalParameterList ReceiverParameter 
FormalParameterList FormalParameters , LastFormalParameter 
FormalParameterList LastFormalParameter
FormalParameters FormalParameter MoreFormalParameters
FormalParameters ReceiverParameter MoreFormalParameters
FormalParameter VariableModifiers UnannType VariableDeclaratorId
VariableModifiers VariableModifier VariableModifiers
VariableModifiers
MoreFormalParameters , FormalParameter MoreFormalParameters
MoreFormalParameters
VariableModifier Annotation
VariableModifier final
LastFormalParameter VariableModifiers UnannType Annotations ... VariableDeclaratorId 
LastFormalParameter FormalParameter
ReceiverParameter Annotations UnannType this
ReceiverParameter Annotations UnannType identifier . this
Throws throws ExceptionTypeList
ExceptionTypeList ExceptionType , ExceptionTypeList
ExceptionTypeList ExceptionType
ExceptionType ClassOrInterfaceType 
ExceptionType TypeVariable
MethodBody Block 
MethodBody ;
InstanceInitializer Block
StaticInitializer static Block
ConstructorDeclaration ConstructorModifiers ConstructorDeclarator OptionalThrows ConstructorBody
ConstructorModifiers ConstructorModifier ConstructorModifiers
ConstructorModifiers
ConstructorModifier Annotation
ConstructorModifier public
ConstructorModifier protected
ConstructorModifier private
ConstructorDeclarator OptionalTypeParameters SimpleTypeName ( OptionalFormalParameterList )
SimpleTypeName identifier
ConstructorBody { OptionalExplicitConstructorInvocation OptionalBlockStatements }
OptionalExplicitConstructorInvocation ExplicitConstructorInvocation
OptionalExplicitConstructorInvocation
ExplicitConstructorInvocation OptionalTypeArguments this ( OptionalArgumentList ) ; 
ExplicitConstructorInvocation OptionalTypeArguments super ( OptionalArgumentList ) ; 
ExplicitConstructorInvocation ExpressionName . OptionalTypeArguments super ( OptionalArgumentList ) ; 
ExplicitConstructorInvocation Primary . OptionalTypeArguments super ( OptionalArgumentList ) ;
OptionalArgumentList ArgumentList
OptionalArgumentList
OptionalBlockStatements BlockStatements
OptionalBlockStatements
EnumDeclaration ClassModifiers enum identifier OptionalSuperinterfaces EnumBody
EnumBody { OptionalEnumConstantList OptionalComma OptionalEnumBodyDeclarations }
OptionalComma ,
OptionalComma
OptionalEnumConstantList EnumConstantList
OptionalEnumConstantList
EnumConstantList EnumConstant , EnumConstantList
EnumConstantList EnumConstant
EnumConstant EnumConstantModifiers identifier OptionalParenthesizedArgumentList OptionalClassBody
OptionalParenthesizedArgumentList ( OptionalArgumentList )
OptionalParenthesizedArgumentList
EnumConstantModifiers EnumConstantModifier EnumConstantModifiers
EnumConstantModifiers
EnumConstantModifier Annotation
OptionalEnumBodyDeclarations EnumBodyDeclarations
OptionalEnumBodyDeclarations
EnumBodyDeclarations ; ClassBodyDeclarations
OptionalClassBody ClassBody
OptionalClassBody


InterfaceDeclaration NormalInterfaceDeclaration 
InterfaceDeclaration AnnotationTypeDeclaration
NormalInterfaceDeclaration InterfaceModifiers interface identifier OptionalTypeParameters OptionalExtendsInterfaces InterfaceBody
InterfaceModifiers InterfaceModifier InterfaceModifiers
InterfaceModifiers
InterfaceModifier Annotation
InterfaceModifier public
InterfaceModifier protected
InterfaceModifier private 
InterfaceModifier abstract
InterfaceModifier static
InterfaceModifier strictfp
OptionalExtendsInterfaces ExtendsInterfaces
OptionalExtendsInterfaces
ExtendsInterfaces extends InterfaceTypeList
InterfaceBody { InterfaceMemberDeclarations }
InterfaceMemberDeclarations InterfaceMemberDeclaration
InterfaceMemberDeclarations
InterfaceMemberDeclaration ConstantDeclaration 
InterfaceMemberDeclaration InterfaceMethodDeclaration 
InterfaceMemberDeclaration ClassDeclaration 
InterfaceMemberDeclaration InterfaceDeclaration 
InterfaceMemberDeclaration ;
ConstantDeclaration ConstantModifiers UnannType VariableDeclaratorList ;
ConstantModifiers ConstantModifier ConstantModifiers
ConstantModifiers
ConstantModifier Annotation
ConstantModifier public 
ConstantModifier static
ConstantModifier final
InterfaceMethodDeclaration InterfaceMethodModifiers MethodHeader MethodBody
InterfaceMethodModifiers InterfaceMethodModifier InterfaceMethodModifiers
InterfaceMethodModifiers
InterfaceMethodModifier Annotation
InterfaceMethodModifier public 
InterfaceMethodModifier abstract
InterfaceMethodModifier default
InterfaceMethodModifier static
InterfaceMethodModifier strictfp
AnnotationTypeDeclaration InterfaceModifiers @ interface identifier AnnotationTypeBody
AnnotationTypeBody { AnnotationTypeMemberDeclarations }
AnnotationTypeMemberDeclarations AnnotationTypeMemberDeclaration AnnotationTypeMemberDeclarations
AnnotationTypeMemberDeclarations
AnnotationTypeMemberDeclaration AnnotationTypeElementDeclaration 
AnnotationTypeMemberDeclaration ConstantDeclaration 
AnnotationTypeMemberDeclaration ClassDeclaration 
AnnotationTypeMemberDeclaration InterfaceDeclaration 
AnnotationTypeMemberDeclaration ;
AnnotationTypeElementDeclaration AnnotationTypeElementModifiers UnannType identifier ( ) OptionalDims OptionalDefaultValue ;
AnnotationTypeElementModifiers AnnotationTypeElementModifier AnnotationTypeElementModifiers
AnnotationTypeElementModifiers
AnnotationTypeElementModifier Annotation
AnnotationTypeElementModifier public 
AnnotationTypeElementModifier abstract
OptionalDefaultValue DefaultValue
OptionalDefaultValue
DefaultValue default ElementValue
Annotation NormalAnnotation 
Annotation MarkerAnnotation 
Annotation SingleElementAnnotation
NormalAnnotation @ TypeName ( OptionalElementValuePairList )
OptionalElementValuePairList ElementValuePairList
OptionalElementValuePairList
ElementValuePairList ElementValuePair , ElementValuePairList
ElementValuePairList ElementValuePair
ElementValuePair identifier = ElementValue
ElementValue ConditionalExpression 
ElementValue ElementValueArrayInitializer 
ElementValue Annotation
ElementValueArrayInitializer { OptionalElementValueList OptionalComma }
OptionalElementValueList ElementValueList
OptionalElementValueList
ElementValueList ElementValue , ElementValueList
ElementValueList ElementValue
MarkerAnnotation @ TypeName
SingleElementAnnotation @ TypeName ( ElementValue )


ArrayInitializer { OptionalVariableInitializerList OptionalComma }
OptionalVariableInitializerList VariableInitializerList
OptionalVariableInitializerList
VariableInitializerList VariableInitializer , VariableInitializerList
VariableInitializerList VariableInitializer


Block { OptionalBlockStatements }
BlockStatements BlockStatement
BlockStatements BlockStatement BlockStatements
BlockStatement LocalVariableDeclarationStatement 
BlockStatement ClassDeclaration 
BlockStatement Statement
LocalVariableDeclarationStatement LocalVariableDeclaration ;
LocalVariableDeclaration VariableModifiers UnannType VariableDeclaratorList
Statement StatementWithoutTrailingSubstatement 
Statement LabeledStatement 
Statement IfThenStatement 
Statement IfThenElseStatement 
Statement WhileStatement 
Statement ForStatement
StatementNoShortIf StatementWithoutTrailingSubstatement 
StatementNoShortIf LabeledStatementNoShortIf 
StatementNoShortIf IfThenElseStatementNoShortIf 
StatementNoShortIf WhileStatementNoShortIf 
StatementNoShortIf ForStatementNoShortIf
StatementWithoutTrailingSubstatement Block 
StatementWithoutTrailingSubstatement EmptyStatement 
StatementWithoutTrailingSubstatement ExpressionStatement 
StatementWithoutTrailingSubstatement AssertStatement 
StatementWithoutTrailingSubstatement SwitchStatement 
StatementWithoutTrailingSubstatement DoStatement 
StatementWithoutTrailingSubstatement BreakStatement 
StatementWithoutTrailingSubstatement ContinueStatement 
StatementWithoutTrailingSubstatement ReturnStatement 
StatementWithoutTrailingSubstatement SynchronizedStatement 
StatementWithoutTrailingSubstatement ThrowStatement 
StatementWithoutTrailingSubstatement TryStatement
EmptyStatement ;
LabeledStatement identifier : Statement
LabeledStatementNoShortIf identifier : StatementNoShortIf
ExpressionStatement StatementExpression ;
StatementExpression Assignment 
StatementExpression PreIncrementExpression 
StatementExpression PreDecrementExpression 
StatementExpression PostIncrementExpression 
StatementExpression PostDecrementExpression 
StatementExpression MethodInvocation 
StatementExpression ClassInstanceCreationExpression
IfThenStatement if ( Expression ) Statement
IfThenElseStatement if ( Expression ) StatementNoShortIf else Statement
IfThenElseStatementNoShortIf if ( Expression ) StatementNoShortIf else StatementNoShortIf
AssertStatement assert Expression ; 
AssertStatement assert Expression : Expression ;
SwitchStatement switch ( Expression ) SwitchBlock
SwitchBlock { SwitchBlockStatementGroups RepeatSwitchLabel }
SwitchBlockStatementGroups SwitchBlockStatementGroup SwitchBlockStatementGroups
SwitchBlockStatementGroups
RepeatSwitchLabel SwitchLabel RepeatSwitchLabel
RepeatSwitchLabel
SwitchBlockStatementGroup SwitchLabels BlockStatements
SwitchLabels SwitchLabel RepeatSwitchLabel
SwitchLabel case ConstantExpression : 
SwitchLabel case EnumConstantName : 
SwitchLabel default :
EnumConstantName identifier
WhileStatement while ( Expression ) Statement
WhileStatementNoShortIf while ( Expression ) StatementNoShortIf
DoStatement do Statement while ( Expression ) ;
ForStatement BasicForStatement 
ForStatement EnhancedForStatement
ForStatementNoShortIf BasicForStatementNoShortIf 
ForStatementNoShortIf EnhancedForStatementNoShortIf
BasicForStatement for ( OptionalForInit ; OptionalExpression ; OptionalForUpdate ) Statement
BasicForStatementNoShortIf for ( OptionalForInit ; OptionalExpression ; OptionalForUpdate ) StatementNoShortIf
OptionalForInit ForInit
OptionalForInit
OptionalExpression Expression
OptionalExpression
OptionalForUpdate ForUpdate
OptionalForUpdate
ForInit StatementExpressionList 
ForInit LocalVariableDeclaration
ForUpdate StatementExpressionList
StatementExpressionList StatementExpression , StatementExpressionList
StatementExpressionList StatementExpression
EnhancedForStatement for ( VariableModifiers UnannType VariableDeclaratorId : Expression ) Statement
EnhancedForStatementNoShortIf for ( VariableModifiers UnannType VariableDeclaratorId : Expression ) StatementNoShortIf
Optionalidentifier identifier
Optionalidentifier
BreakStatement break Optionalidentifier ;
ContinueStatement continue Optionalidentifier ;
ReturnStatement return OptionalExpression ;
ThrowStatement throw Expression ;
SynchronizedStatement synchronized ( Expression ) Block
TryStatement try Block Catches 
TryStatement try Block OptionalCatches Finally 
TryStatement TryWithResourcesStatement
OptionalCatches Catches
OptionalCatches
Catches CatchClause CatchClauses
CatchClauses CatchClause CatchClauses
CatchClauses
CatchClause catch ( CatchFormalParameter ) Block
CatchFormalParameter VariableModifiers CatchType VariableDeclaratorId
CatchType UnannClassType RepeatedOrClassTypes
RepeatedOrClassTypes | ClassOrInterfaceType RepeatedOrClassTypes
RepeatedOrClassTypes
OptionalFinally Finally
OptionalFinally
Finally finally Block
TryWithResourcesStatement try ResourceSpecification Block OptionalCatches OptionalFinally
ResourceSpecification ( ResourceList OptionalSemicolon )
OptionalSemicolon ;
OptionalSemicolon
ResourceList Resource ; ResourceList
ResourceList Resource
Resource VariableModifiers UnannType VariableDeclaratorId = Expression

Primary PrimaryNoNewArray 
Primary ArrayCreationExpression
PrimaryNoNewArray Literal 
PrimaryNoNewArray ClassLiteral 
PrimaryNoNewArray this 
PrimaryNoNewArray TypeName . this 
PrimaryNoNewArray ( Expression ) 
PrimaryNoNewArray ClassInstanceCreationExpression 
PrimaryNoNewArray FieldAccess 
PrimaryNoNewArray ArrayAccess 
PrimaryNoNewArray MethodInvocation 
PrimaryNoNewArray MethodReference
RepeatedBrackets [ ] RepeatedBrackets
RepeatedBrackets
ClassLiteral TypeName RepeatedBrackets . class 
ClassLiteral NumericType RepeatedBrackets . class 
ClassLiteral boolean RepeatedBrackets . class 
ClassLiteral void . class
ClassInstanceCreationExpression UnqualifiedClassInstanceCreationExpression 
ClassInstanceCreationExpression ExpressionName . UnqualifiedClassInstanceCreationExpression 
ClassInstanceCreationExpression Primary . UnqualifiedClassInstanceCreationExpression
UnqualifiedClassInstanceCreationExpression new OptionalTypeArguments ClassOrInterfaceTypeToInstantiate ( OptionalArgumentList ) OptionalClassBody
ClassOrInterfaceTypeToInstantiate Annotations identifier RepeatDottedAnnotationsidentifier OptionalTypeArgumentsOrDiamond
RepeatDottedAnnotationsidentifier . Annotations identifier RepeatDottedAnnotationsidentifier
RepeatDottedAnnotationsIdentiifer
OptionalTypeArgumentsOrDiamond TypeArgumentsOrDiamond
OptionalTypeArgumentsOrDiamond
TypeArgumentsOrDiamond TypeArguments 
TypeArgumentsOrDiamond <>
FieldAccess Primary . identifier 
FieldAccess super . identifier 
FieldAccess TypeName . super . identifier
ArrayAccess ExpressionName [ Expression ] 
ArrayAccess PrimaryNoNewArray [ Expression ]
MethodInvocation MethodName ( OptionalArgumentList ) 
MethodInvocation TypeName . OptionalTypeArguments identifier ( OptionalArgumentList ) 
MethodInvocation ExpressionName . OptionalTypeArguments identifier ( OptionalArgumentList ) 
MethodInvocation Primary . OptionalTypeArguments identifier ( OptionalArgumentList ) 
MethodInvocation super . OptionalTypeArguments identifier ( OptionalArgumentList ) 
MethodInvocation TypeName . super . OptionalTypeArguments identifier ( OptionalArgumentList )
ArgumentList Expression , ArgumentList
ArgumentList Expression
MethodReference ExpressionName :: OptionalTypeArguments identifier 
MethodReference ReferenceType :: OptionalTypeArguments identifier 
MethodReference Primary :: OptionalTypeArguments identifier 
MethodReference super :: OptionalTypeArguments identifier 
MethodReference TypeName . super :: OptionalTypeArguments identifier 
MethodReference ClassOrInterfaceType :: OptionalTypeArguments new 
MethodReference ArrayType :: new
ArrayCreationExpression new PrimitiveType DimExprs OptionalDims 
ArrayCreationExpression new ClassOrInterfaceType DimExprs OptionalDims 
ArrayCreationExpression new PrimitiveType Dims ArrayInitializer 
ArrayCreationExpression new ClassOrInterfaceType Dims ArrayInitializer
DimExprs DimExpr DimExprs
DimExprs DimExpr
DimExpr Annotations [ Expression ]
Expression LambdaExpression 
Expression AssignmentExpression
LambdaExpression LambdaParameters -> LambdaBody
LambdaParameters identifier 
LambdaParameters ( OptionalFormalParameterList ) 
LambdaParameters ( InferredFormalParameterList )
InferredFormalParameterList identifier , InferredFormalParameterList
InferredFormalParameterList identifier
LambdaBody Expression 
LambdaBody Block
AssignmentExpression ConditionalExpression 
AssignmentExpression Assignment
Assignment LeftHandSide AssignmentOperator Expression
LeftHandSide ExpressionName 
LeftHandSide FieldAccess 
LeftHandSide ArrayAccess
AssignmentOperator =
AssignmentOperator *=
AssignmentOperator /=
AssignmentOperator %=
AssignmentOperator +=
AssignmentOperator -=
AssignmentOperator <<=
AssignmentOperator >>=
AssignmentOperator >>>=
AssignmentOperator &=
AssignmentOperator ^=
AssignmentOperator |=
ConditionalExpression ConditionalOrExpression 
ConditionalExpression ConditionalOrExpression ? Expression : ConditionalExpression 
ConditionalExpression ConditionalOrExpression ? Expression : LambdaExpression 
ConditionalOrExpression ConditionalAndExpression 
ConditionalOrExpression ConditionalOrExpression || ConditionalAndExpression
ConditionalAndExpression InclusiveOrExpression 
ConditionalAndExpression ConditionalAndExpression && InclusiveOrExpression
InclusiveOrExpression ExclusiveOrExpression 
InclusiveOrExpression InclusiveOrExpression | ExclusiveOrExpression
ExclusiveOrExpression AndExpression 
ExclusiveOrExpression ExclusiveOrExpression ^ AndExpression
AndExpression EqualityExpression 
AndExpression AndExpression & EqualityExpression
EqualityExpression RelationalExpression 
EqualityExpression EqualityExpression == RelationalExpression 
EqualityExpression EqualityExpression != RelationalExpression
RelationalExpression ShiftExpression 
RelationalExpression RelationalExpression < ShiftExpression 
RelationalExpression RelationalExpression > ShiftExpression 
RelationalExpression RelationalExpression <= ShiftExpression 
RelationalExpression RelationalExpression >= ShiftExpression 
RelationalExpression RelationalExpression instanceof ReferenceType
ShiftExpression AdditiveExpression 
ShiftExpression ShiftExpression << AdditiveExpression 
ShiftExpression ShiftExpression >> AdditiveExpression 
ShiftExpression ShiftExpression >>> AdditiveExpression
AdditiveExpression MultiplicativeExpression 
AdditiveExpression AdditiveExpression + MultiplicativeExpression 
AdditiveExpression AdditiveExpression - MultiplicativeExpression
MultiplicativeExpression UnaryExpression 
MultiplicativeExpression MultiplicativeExpression * UnaryExpression 
MultiplicativeExpression MultiplicativeExpression / UnaryExpression 
MultiplicativeExpression MultiplicativeExpression % UnaryExpression
UnaryExpression PreIncrementExpression 
UnaryExpression PreDecrementExpression 
UnaryExpression + UnaryExpression 
UnaryExpression - UnaryExpression 
UnaryExpression UnaryExpressionNotPlusMinus
PreIncrementExpression ++ UnaryExpression
PreDecrementExpression -- UnaryExpression
UnaryExpressionNotPlusMinus PostfixExpression 
UnaryExpressionNotPlusMinus ~ UnaryExpression 
UnaryExpressionNotPlusMinus ! UnaryExpression 
UnaryExpressionNotPlusMinus CastExpression
PostfixExpression Primary 
PostfixExpression ExpressionName 
PostfixExpression PostIncrementExpression 
PostfixExpression PostDecrementExpression
PostIncrementExpression PostfixExpression ++
PostDecrementExpression PostfixExpression --
CastExpression ( PrimitiveType ) UnaryExpression 
CastExpression ( ReferenceType AdditionalBounds ) UnaryExpressionNotPlusMinus 
CastExpression ( ReferenceType AdditionalBounds ) LambdaExpression 
ConstantExpression Expression
